{"version":3,"file":"BareClient.umd.min.cjs","sources":["../src/snapshot.ts","../src/Client.ts","../src/encodeProtocol.ts","../src/md5.ts","../src/splitHeaderUtil.ts","../src/BareClient.ts","../src/V2.ts","../src/V1.ts"],"sourcesContent":["// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const global = globalThis;\nexport const fetch = global.fetch;\nexport const WebSocket = global.WebSocket;\nexport const Request = global.Request;\nexport const Response = global.Response;\nexport const XMLHttpRequest = global.XMLHttpRequest;\n","import {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n} from './BareClient';\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport interface GenericClient {\n\tconnect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket>;\n\trequest(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse>;\n}\n\nexport default class Client {\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n","const validChars =\n\t\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\nconst reserveChar = '%';\n\nexport function validProtocol(protocol: string): boolean {\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (!validChars.includes(char)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function encodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (validChars.includes(char) && char !== reserveChar) {\n\t\t\tresult += char;\n\t\t} else {\n\t\t\tconst code = char.charCodeAt(0);\n\t\t\tresult += reserveChar + code.toString(16).padStart(2, '0');\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function decodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (char === reserveChar) {\n\t\t\tconst code = parseInt(protocol.slice(i + 1, i + 3), 16);\n\t\t\tconst decoded = String.fromCharCode(code);\n\n\t\t\tresult += decoded;\n\t\t\ti += 2;\n\t\t} else {\n\t\t\tresult += char;\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\treturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\treturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = '';\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\treturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\treturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\treturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = '0123456789abcdef';\n\tlet output = '';\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\treturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\treturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\treturn rawHMACMD5(key, string);\n}\n","import { BareError } from './Client';\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Readonly<Headers>): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has('x-bare-headers')) {\n\t\tconst value = headers.get('x-bare-headers')!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete('x-bare-headers');\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Readonly<Headers>): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = 'x-bare-headers';\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(';')) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: 'INVALID_BARE_HEADER',\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: `Value didn't begin with semi-colon.`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(''));\n\t}\n\n\treturn output;\n}\n","import { GenericClient, statusRedirect } from './Client';\nimport ClientV1 from './V1';\nimport ClientV2 from './V2';\nimport { validProtocol } from './encodeProtocol';\n\n// Implements the protocol for requesting bare data from a server\n// See ../Server/Send.mjs\n\nexport * from './Client';\n\nconst clientCtors: [string, { new (server: URL): GenericClient }][] = [\n\t['v2', ClientV2],\n\t['v1', ClientV1],\n];\n\nexport type BareMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'UPDATE'\n\t| string;\n\nexport type BareCache =\n\t| 'default'\n\t| 'no-store'\n\t| 'reload'\n\t| 'no-cache'\n\t| 'force-cache'\n\t| 'only-if-cached'\n\t| string;\n\nexport interface XBare {\n\tstatus?: number;\n\tstatusText?: string;\n\theaders?: Headers;\n\trawHeaders?: BareHeaders;\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport type urlLike = URL | string;\n\nexport const maxRedirects = 20;\n\nexport type BareHeaders = { [key: string]: string | string[] };\n\n/**\n * WebSocket with an additional property.\n */\nexport type BareWebSocket = WebSocket & { meta: Promise<XBare> };\n\n/**\n * A Response with additional properties.\n */\nexport type BareResponse = Response & {\n\trawResponse: Response;\n\trawHeaders: BareHeaders;\n};\n\n/**\n * A BareResponse with additional properties.\n */\nexport type BareResponseFetch = BareResponse & { finalURL: string };\nexport type BareBodyInit =\n\t| Blob\n\t| BufferSource\n\t| FormData\n\t| URLSearchParams\n\t| ReadableStream\n\t| undefined\n\t| null;\n\nexport type BareFetchInit = {\n\tmethod?: BareMethod;\n\theaders?: Headers | BareHeaders;\n\tbody?: BareBodyInit;\n\tcache?: BareCache;\n\tredirect?: 'follow' | 'manual' | 'error' | string;\n\tsignal?: AbortSignal;\n};\n\nexport type BareMaintainer = {\n\temail?: string;\n\twebsite?: string;\n};\n\nexport type BareProject = {\n\tname?: string;\n\tdescription?: string;\n\temail?: string;\n\twebsite?: string;\n\trepository?: string;\n};\n\nexport type BareLanguage =\n\t| 'NodeJS'\n\t| 'Deno'\n\t| 'Java'\n\t| 'PHP'\n\t| 'Rust'\n\t| 'C'\n\t| 'C++'\n\t| 'C#'\n\t| 'Ruby'\n\t| 'Go'\n\t| 'Crystal'\n\t| 'Bash'\n\t| string;\n\nexport type BareManifest = {\n\tmaintainer?: BareMaintainer;\n\tproject?: BareProject;\n\tversions: string[];\n\tlanguage: BareLanguage;\n\tmemoryUsage?: number;\n};\n\nexport default class BareClient {\n\tdata: BareManifest | undefined;\n\tprivate client: GenericClient | undefined;\n\tprivate server: URL;\n\tprivate ready: boolean;\n\t/**\n\t *\n\t * @param server A full URL to the bare server.\n\t * @param data The a copy of the Bare server data found in BareClient.data. If specified, this data will be loaded. Otherwise, a request will be made to the bare server (upon fetching or creating a WebSocket).\n\t */\n\tconstructor(server: string | URL, data?: BareManifest) {\n\t\tthis.server = new URL(server);\n\t\tthis.ready = false;\n\n\t\tif (typeof data === 'object') {\n\t\t\tthis.loadData(data);\n\t\t}\n\t}\n\tprivate loadData(data: BareManifest) {\n\t\tlet found = false;\n\n\t\t// newest-oldest\n\t\tfor (const [version, ctor] of clientCtors) {\n\t\t\tif (data.versions.includes(version)) {\n\t\t\t\tthis.client = new ctor(this.server);\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!found) {\n\t\t\tthrow new Error(`Unable to find compatible client version.`);\n\t\t}\n\n\t\tthis.data = data;\n\t\tthis.ready = true;\n\t}\n\tprivate async work() {\n\t\tif (this.ready === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst outgoing = await fetch(this.server);\n\n\t\tif (!outgoing.ok) {\n\t\t\tthrow new Error(\n\t\t\t\t`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`\n\t\t\t);\n\t\t}\n\n\t\tthis.loadData(await outgoing.json());\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tawait this.work();\n\t\treturn await this.client!.request(\n\t\t\tmethod,\n\t\t\trequestHeaders,\n\t\t\tbody,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tport,\n\t\t\tpath,\n\t\t\tcache,\n\t\t\tsignal\n\t\t);\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tawait this.work();\n\t\treturn this.client!.connect(requestHeaders, protocol, host, port, path);\n\t}\n\t/**\n\t *\n\t * @param url\n\t * @param protocols\n\t * @param origin Location of client that created the WebSocket\n\t * @returns\n\t */\n\tasync createWebSocket(\n\t\turl: urlLike,\n\t\theaders: BareHeaders = {},\n\t\tprotocols: string | string[] = []\n\t): Promise<BareWebSocket> {\n\t\tconst requestHeaders: BareHeaders =\n\t\t\theaders instanceof Headers ? Object.fromEntries(headers) : headers;\n\n\t\turl = new URL(url);\n\n\t\t// user is expected to specify user-agent and origin\n\t\t// both are in spec\n\n\t\trequestHeaders['Host'] = url.host;\n\t\t// requestHeaders['Origin'] = origin;\n\t\trequestHeaders['Pragma'] = 'no-cache';\n\t\trequestHeaders['Cache-Control'] = 'no-cache';\n\t\trequestHeaders['Upgrade'] = 'websocket';\n\t\t// requestHeaders['User-Agent'] = navigator.userAgent;\n\t\trequestHeaders['Connection'] = 'Upgrade';\n\n\t\tif (typeof protocols === 'string') {\n\t\t\tprotocols = [protocols];\n\t\t}\n\n\t\tfor (const proto of protocols) {\n\t\t\tif (!validProtocol(proto)) {\n\t\t\t\tthrow new DOMException(\n\t\t\t\t\t`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (protocols.length) {\n\t\t\theaders['Sec-Websocket-Protocol'] = protocols.join(', ');\n\t\t}\n\n\t\tawait this.work();\n\t\treturn this.client!.connect(\n\t\t\theaders,\n\t\t\turl.protocol,\n\t\t\turl.hostname,\n\t\t\turl.port,\n\t\t\turl.pathname + url.search\n\t\t);\n\t}\n\tasync fetch(\n\t\turl: urlLike | Request,\n\t\tinit: BareFetchInit = {}\n\t): Promise<BareResponseFetch> {\n\t\tif (url instanceof Request) {\n\t\t\t// behave similar to the browser when fetch is called with (Request, Init)\n\t\t\tif (init) {\n\t\t\t\turl = new URL(url.url);\n\t\t\t} else {\n\t\t\t\tinit = url;\n\t\t\t\turl = new URL(url.url);\n\t\t\t}\n\t\t} else {\n\t\t\turl = new URL(url);\n\t\t}\n\n\t\tlet method: BareMethod;\n\n\t\tif (typeof init.method === 'string') {\n\t\t\tmethod = init.method;\n\t\t} else {\n\t\t\tmethod = 'GET';\n\t\t}\n\n\t\tlet body: BareBodyInit;\n\n\t\tif (init.body !== undefined && init.body !== null) {\n\t\t\tbody = init.body;\n\t\t}\n\n\t\tlet headers: BareHeaders;\n\n\t\tif (typeof init.headers === 'object' && init.headers !== null) {\n\t\t\tif (init.headers instanceof Headers) {\n\t\t\t\theaders = Object.fromEntries(init.headers);\n\t\t\t} else {\n\t\t\t\theaders = init.headers;\n\t\t\t}\n\t\t} else {\n\t\t\theaders = {};\n\t\t}\n\n\t\tlet cache: BareCache;\n\n\t\tif (typeof init.cache === 'string') {\n\t\t\tcache = init.cache;\n\t\t} else {\n\t\t\tcache = 'default';\n\t\t}\n\n\t\tlet signal: AbortSignal | undefined;\n\n\t\tif (init.signal instanceof AbortSignal) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\tfor (let i = 0; ; i++) {\n\t\t\tlet port;\n\n\t\t\tif (url.port === '') {\n\t\t\t\tif (url.protocol === 'https:') {\n\t\t\t\t\tport = '443';\n\t\t\t\t} else {\n\t\t\t\t\tport = '80';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tport = url.port;\n\t\t\t}\n\n\t\t\theaders.host = url.host;\n\n\t\t\tconst response: BareResponse & Partial<BareResponseFetch> =\n\t\t\t\tawait this.request(\n\t\t\t\t\tmethod,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t\turl.protocol,\n\t\t\t\t\turl.hostname,\n\t\t\t\t\tport,\n\t\t\t\t\turl.pathname + url.search,\n\t\t\t\t\tcache,\n\t\t\t\t\tsignal\n\t\t\t\t);\n\n\t\t\tresponse.finalURL = url.toString();\n\n\t\t\tif (statusRedirect.includes(response.status)) {\n\t\t\t\tswitch (init.redirect) {\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\tif (maxRedirects > i && response.headers.has('location')) {\n\t\t\t\t\t\t\turl = new URL(response.headers.get('location')!, url);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient';\nimport Client, { BareError, GenericClient, statusEmpty } from './Client';\nimport md5 from './md5';\nimport { joinHeaders, splitHeaders } from './splitHeaderUtil';\n\nexport default class ClientV2 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(2, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('./ws-new-meta', this.base);\n\t\tthis.getMeta = new URL(`./ws-meta`, this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst request = new Request(this.newMeta, {\n\t\t\theaders: this.createBareHeaders(\n\t\t\t\tprotocol,\n\t\t\t\thost,\n\t\t\t\tpath,\n\t\t\t\tport,\n\t\t\t\trequestHeaders\n\t\t\t),\n\t\t});\n\n\t\tconst assign_meta = await fetch(request);\n\n\t\tif (!assign_meta.ok) {\n\t\t\tthrow new BareError(assign_meta.status, await assign_meta.json());\n\t\t}\n\n\t\tconst id = await assign_meta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\tid,\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tresolve(await await this.readBareResponse(outgoing));\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`blob:${location.origin}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (cache !== 'only-if-cached') {\n\t\t\toptions.cache = <RequestCache>cache;\n\t\t}\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\toptions.headers = this.createBareHeaders(\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders\n\t\t);\n\n\t\tconst request = new Request(\n\t\t\tthis.http + '?cache=' + md5(`${protocol}${host}${port}${path}`),\n\t\t\toptions\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status!) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status!,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers!,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response): Promise<XBare> {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: XBare = {};\n\n\t\tif (responseHeaders.has('x-bare-status')) {\n\t\t\tresult.status = parseInt(responseHeaders.get('x-bare-status')!);\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-status-text')) {\n\t\t\tresult.statusText = responseHeaders.get('x-bare-status-text')!;\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-headers')) {\n\t\t\tresult.rawHeaders = JSON.parse(responseHeaders.get('x-bare-headers')!);\n\t\t\tresult.headers = new Headers(<HeadersInit>result.rawHeaders);\n\t\t}\n\n\t\treturn result;\n\t}\n\tcreateBareHeaders(\n\t\tprotocol: BareWSProtocol | BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: number | string,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set('x-bare-protocol', protocol);\n\t\theaders.set('x-bare-host', host);\n\t\theaders.set('x-bare-path', path);\n\t\theaders.set('x-bare-port', port.toString());\n\t\theaders.set('x-bare-headers', JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append('x-bare-forward-headers', header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append('x-bare-pass-headers', header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append('x-bare-pass-status', status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n","import {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient.js';\nimport Client, { BareError, GenericClient, statusEmpty } from './Client.js';\nimport { encodeProtocol } from './encodeProtocol.js';\n\nexport default class ClientV1 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(1, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('ws-new-meta', this.base);\n\t\tthis.getMeta = new URL('ws-meta', this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst assignMeta = await fetch(this.newMeta, { method: 'GET' });\n\n\t\tif (!assignMeta.ok) {\n\t\t\tthrow new BareError(assignMeta.status, await assignMeta.json());\n\t\t}\n\n\t\tconst id = await assignMeta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\t'bare',\n\t\t\tencodeProtocol(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tremote: {\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\thost,\n\t\t\t\t\t\tport,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t},\n\t\t\t\t\theaders: requestHeaders,\n\t\t\t\t\tforward_headers: [\n\t\t\t\t\t\t'accept-encoding',\n\t\t\t\t\t\t'accept-language',\n\t\t\t\t\t\t'sec-websocket-extensions',\n\t\t\t\t\t\t'sec-websocket-key',\n\t\t\t\t\t\t'sec-websocket-version',\n\t\t\t\t\t],\n\t\t\t\t\tid,\n\t\t\t\t})\n\t\t\t),\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tif (!outgoing.ok) {\n\t\t\t\t\treject(new BareError(outgoing.status, await outgoing.json()));\n\t\t\t\t}\n\n\t\t\t\tresolve(await outgoing.json());\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`blob:${location.origin}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst forwardHeaders = ['accept-encoding', 'accept-language'];\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\t// bare can be an absolute path containing no origin, it becomes relative to the script\n\t\tconst request = new Request(this.http, options);\n\n\t\tthis.writeBareRequest(\n\t\t\trequest,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders,\n\t\t\tforwardHeaders\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst requiredHeaders = [\n\t\t\t'x-bare-status',\n\t\t\t'x-bare-status-text',\n\t\t\t'x-bare-headers',\n\t\t];\n\n\t\tfor (const header of requiredHeaders) {\n\t\t\tif (!response.headers.has(header)) {\n\t\t\t\tthrow new BareError(500, {\n\t\t\t\t\tcode: 'IMPL_MISSING_BARE_HEADER',\n\t\t\t\t\tid: `response.headers.${header}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst status = parseInt(response.headers.get('x-bare-status')!);\n\t\tconst statusText = response.headers.get('x-bare-status-text')!;\n\t\tconst rawHeaders = JSON.parse(response.headers.get('x-bare-headers')!);\n\t\tconst headers = new Headers(rawHeaders);\n\n\t\treturn {\n\t\t\tstatus,\n\t\t\tstatusText,\n\t\t\trawHeaders,\n\t\t\theaders,\n\t\t};\n\t}\n\tprivate writeBareRequest(\n\t\trequest: Request,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: string | number,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[]\n\t) {\n\t\trequest.headers.set('x-bare-protocol', protocol);\n\t\trequest.headers.set('x-bare-host', host);\n\t\trequest.headers.set('x-bare-path', path);\n\t\trequest.headers.set('x-bare-port', port.toString());\n\t\trequest.headers.set('x-bare-headers', JSON.stringify(bareHeaders));\n\t\trequest.headers.set(\n\t\t\t'x-bare-forward-headers',\n\t\t\tJSON.stringify(forwardHeaders)\n\t\t);\n\t}\n}\n"],"names":["global","globalThis","fetch","WebSocket","Request","Response","statusEmpty","statusRedirect","BareError","Error","status","body","constructor","super","message","code","this","Client","base","version","server","URL","validChars","validProtocol","protocol","i","length","char","includes","encodeProtocol","result","charCodeAt","toString","padStart","safeAdd","x","y","lsw","md5cmn","q","a","b","s","t","num","cnt","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","outputLen","length8","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","rstrMD5","rawHMACMD5","k","key","data","bkey","ipad","opad","hash","concat","rstrHMACMD5","md5","string","raw","MAX_HEADER_VALUE","clientCtors","ws","http","newMeta","getMeta","async","requestHeaders","host","port","path","request","headers","createBareHeaders","assign_meta","ok","json","id","text","socket","meta","Promise","resolve","reject","addEventListener","outgoing","method","readBareResponse","cache","signal","startsWith","response","location","origin","rawHeaders","Object","fromEntries","rawResponse","bareHeaders","Headers","header","value","options","credentials","undefined","readResponse","statusText","responseHeaders","prefix","has","join","parseInt","slice","delete","set","joinHeaders","get","JSON","parse","forwardHeaders","passHeaders","passStatus","stringify","append","split","part","splitHeaders","assignMeta","remote","forward_headers","writeBareRequest","requiredHeaders","client","ready","loadData","found","ctor","versions","work","connect","url","protocols","proto","DOMException","hostname","pathname","search","init","AbortSignal","finalURL","redirect","TypeError"],"mappings":"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"}